- name: Ensure system dependencies
  sudo: yes
  apt:
    state: present
    pkg: "{{ item }}"
  with_items:
    - "python-pip"
    - "logrotate"


- name: Ensure pip dependencies
  sudo: yes
  pip:
    state: present
    name: "{{ item }}"
  with_items:
    - "docker-py"
    - "python-apt"


- name: Ensure apt keys
  sudo: yes
  apt_key:
    id: 36A1D7869245C8950F966E92D8576A8BA88D21E9
    keyserver: "hkp://keyserver.ubuntu.com:80"
    state: present


- name: Ensure apt repositories
  sudo: yes
  apt_repository:
    repo: "deb https://get.docker.com/ubuntu docker main"
    state: present


- name: Ensure Docker
  sudo: yes
  apt:
    state: present
    pkg: "lxc-docker"


- name: Ensure variable directories exist
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "{{ waterbutler_complete }}"
    - "{{ waterbutler_pending }}"

- name: Copy settings
  copy:
    dest: "{{ waterbutler_config }}"
    src: "~/.cos/waterbutler-{{ waterbutler_env }}.json"
    mode: 0776


- name: Clean up old dockers
  docker:
    image: "{{ item }}"
    state: absent
  with_items:
    - "redis"
    # - "ctlc/ambassador"
    - "centerforopenscience/rabbitmq"
    - "centerforopenscience/waterbutler"
  tags:
    - update


- name: Run Redis image
  docker:
    image: "redis:latest"
    restart_policy: always
    name: waterbutler_redis_1
    volumes:
      - "{{ redis_data }}:/data"
  tags:
    - update


- name: Run RabbitMQ image
  docker:
    restart_policy: always
    name: waterbutler_rabbitmq_1
    hostname: waterbutler_rabbitmq_1
    image: "centerforopenscience/rabbitmq:latest"
    volumes:
      - "{{ rabbitmq_data }}:/var/lib/rabbitmq"
  tags:
    - update


- name: Run WaterButler Server image
  docker:
    name: "waterbutler_server_{{ item }}"
    image: "centerforopenscience/waterbutler:latest"
    command: invoke-server
    expose:
      - "{{ (waterbutler_start_port | int) + (item | int) }}"
    ports:
      - "{{ (waterbutler_start_port | int) + (item | int) }}:7777"
    env:
      ENV: "{{ waterbutler_env }}"
      SOURCE_BRANCH: develop
      SOURCE_REPO: https://github.com/CenterForOpenScience/waterbutler
    links:
      - waterbutler_redis_1:redis
      - waterbutler_rabbitmq_1:rabbitmq
    restart_policy: always
    volumes:
      - "{{ waterbutler_pending }}:/data/osfstorage/pending"
      - "{{ waterbutler_complete }}:/data/osfstorage/complete"
      - "{{ waterbutler_config }}:/home/python/.cos/waterbutler-{{ waterbutler_env }}.json:ro"
  tags:
    - update
  with_sequence: "{{ waterbutler_instances }}"


- name: Run WaterButler Celery image
  docker:
    name: waterbutler_celery_1
    image: "centerforopenscience/waterbutler:latest"
    command: invoke-celery
    restart_policy: always
    env:
      ENV: "{{ waterbutler_env }}"
      SOURCE_BRANCH: develop
      SOURCE_REPO: https://github.com/CenterForOpenScience/waterbutler
    links:
      - waterbutler_redis_1:redis
      - waterbutler_rabbitmq_1:rabbitmq
    volumes:
      - "{{ waterbutler_pending }}:/data/osfstorage/pending"
      - "{{ waterbutler_complete }}:/data/osfstorage/complete"
      - "{{ waterbutler_config }}:/home/python/.cos/waterbutler-{{ waterbutler_env }}.json:ro"
  tags:
    - update


# - name: Run WaterButler Ambassadors
#   docker:
#     image: ctlc/ambassador
#     name: 'waterbutler_server_{{ item }}_amb'
#     expose:
#       - 7777
#     ports:
#       - "7777:7777"
#     links:
#       - 'waterbutler_server_{{ item }}'
#     restart_policy: always
#   tags:
#     - update
#   with_items:
#     - '1'
